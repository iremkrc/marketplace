{"ast":null,"code":"var _jsxFileName = \"/home/irem/Desktop/obss/irem.karaca/week4_react/reactDemo/my-app/src/marketplace/Products.js\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Table } from \"antd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  dataIndex: \"name\",\n  sorter: true,\n  width: \"20%\"\n}, {\n  title: \"Price\",\n  dataIndex: \"price\",\n  sorter: true,\n  width: \"20%\"\n}];\n\nclass Products extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      pagination: {\n        current: 1,\n        pageSize: 5\n      },\n      loading: false\n    };\n\n    this.handleTableChange = (pagination, filters, sorter) => {\n      this.fetch({\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        pagination,\n        ...filters\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      pagination\n    } = this.state;\n    this.fetch({\n      pagination\n    });\n  }\n\n  render() {\n    //const { data, pagination, loading } = this.state;\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      rowKey: record => record.login.uuid,\n      dataSource: data,\n      pagination: pagination,\n      loading: loading,\n      onChange: this.handleTableChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/home/irem/Desktop/obss/irem.karaca/week4_react/reactDemo/my-app/src/marketplace/Products.js"],"names":["React","Table","axios","columns","title","dataIndex","sorter","width","Products","Component","state","data","pagination","current","pageSize","loading","handleTableChange","filters","fetch","sortField","field","sortOrder","order","componentDidMount","render","record","login","uuid"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,KAAT,QAAsB,MAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,OAAO,GAAG,CACZ;AACIC,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,SAAS,EAAE,MAFf;AAGIC,EAAAA,MAAM,EAAE,IAHZ;AAIIC,EAAAA,KAAK,EAAE;AAJX,CADY,EAOZ;AACIH,EAAAA,KAAK,EAAE,OADX;AAEIC,EAAAA,SAAS,EAAE,OAFf;AAGIC,EAAAA,MAAM,EAAE,IAHZ;AAIIC,EAAAA,KAAK,EAAE;AAJX,CAPY,CAAhB;;AAeA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,UAAU,EAAE;AACRC,QAAAA,OAAO,EAAE,CADD;AAERC,QAAAA,QAAQ,EAAE;AAFF,OAFR;AAMJC,MAAAA,OAAO,EAAE;AANL,KAD2B;;AAAA,SASnCC,iBATmC,GASf,CAACJ,UAAD,EAAaK,OAAb,EAAsBX,MAAtB,KAAiC;AACjD,WAAKY,KAAL,CAAW;AACPC,QAAAA,SAAS,EAAEb,MAAM,CAACc,KADX;AAEPC,QAAAA,SAAS,EAAEf,MAAM,CAACgB,KAFX;AAGPV,QAAAA,UAHO;AAIP,WAAGK;AAJI,OAAX;AAMH,KAhBkC;AAAA;;AAmBnCM,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEX,MAAAA;AAAF,QAAiB,KAAKF,KAA5B;AACA,SAAKQ,KAAL,CAAW;AAAEN,MAAAA;AAAF,KAAX;AACH;;AAKDY,EAAAA,MAAM,GAAG;AACL;AACA,wBACI,QAAC,KAAD;AACI,MAAA,OAAO,EAAErB,OADb;AAEI,MAAA,MAAM,EAAGsB,MAAD,IAAYA,MAAM,CAACC,KAAP,CAAaC,IAFrC;AAGI,MAAA,UAAU,EAAEhB,IAHhB;AAII,MAAA,UAAU,EAAEC,UAJhB;AAKI,MAAA,OAAO,EAAEG,OALb;AAMI,MAAA,QAAQ,EAAE,KAAKC;AANnB;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAvCkC;;AA0CvC,eAAeR,QAAf","sourcesContent":["import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Table } from \"antd\";\nimport axios from \"axios\";\n\nconst columns = [\n    {\n        title: \"Name\",\n        dataIndex: \"name\",\n        sorter: true,\n        width: \"20%\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        sorter: true,\n        width: \"20%\"\n    }\n];\n\nclass Products extends React.Component {\n    state = {\n        data: [],\n        pagination: {\n            current: 1,\n            pageSize: 5\n        },\n        loading: false\n    };\n    handleTableChange = (pagination, filters, sorter) => {\n        this.fetch({\n            sortField: sorter.field,\n            sortOrder: sorter.order,\n            pagination,\n            ...filters\n        });\n    };\n\n\n    componentDidMount() {\n        const { pagination } = this.state;\n        this.fetch({ pagination });\n    }\n\n\n\n\n    render() {\n        //const { data, pagination, loading } = this.state;\n        return (\n            <Table\n                columns={columns}\n                rowKey={(record) => record.login.uuid}\n                dataSource={data}\n                pagination={pagination}\n                loading={loading}\n                onChange={this.handleTableChange}\n            />\n        );\n    }\n}\n\nexport default Products;"]},"metadata":{},"sourceType":"module"}