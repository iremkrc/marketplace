{"ast":null,"code":"var _jsxFileName = \"/home/irem/Desktop/obss/irem.karaca/week4_react/reactDemo/my-app/src/fetch-example/PersonList.js\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Table } from \"antd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  dataIndex: \"name\",\n  sorter: true,\n  render: name => `${name.first} ${name.last}`,\n  width: \"20%\"\n}, {\n  title: \"Gender\",\n  dataIndex: \"gender\",\n  filters: [{\n    text: \"Male\",\n    value: \"male\"\n  }, {\n    text: \"Female\",\n    value: \"female\"\n  }],\n  width: \"20%\"\n}, {\n  title: \"Email\",\n  dataIndex: \"email\"\n}];\n\nconst getRandomuserParams = params => {\n  return {\n    results: params.pagination.pageSize,\n    page: params.pagination.current,\n    ...params\n  };\n};\n\nclass PersonList extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      pagination: {\n        current: 1,\n        pageSize: 10\n      },\n      loading: false\n    };\n\n    this.handleTableChange = (pagination, filters, sorter) => {\n      this.fetch({\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        pagination,\n        ...filters\n      });\n    };\n\n    this.fetch = (params = {}) => {\n      this.setState({\n        loading: true\n      });\n      axios.get(\"https://randomuser.me/api\", {\n        params: getRandomuserParams(params)\n      }).then(response => {\n        const {\n          data\n        } = response;\n        this.setState({\n          loading: false,\n          data: data.results,\n          pagination: { ...params.pagination,\n            total: 200 // Mock data\n\n          }\n        });\n      }).catch(error => {\n        console.log(error);\n      }).then(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      pagination\n    } = this.state;\n    this.fetch({\n      pagination\n    });\n  }\n\n  render() {\n    const {\n      data,\n      pagination,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      rowKey: record => record.login.uuid,\n      dataSource: data,\n      pagination: pagination,\n      loading: loading,\n      onChange: this.handleTableChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PersonList;","map":{"version":3,"sources":["/home/irem/Desktop/obss/irem.karaca/week4_react/reactDemo/my-app/src/fetch-example/PersonList.js"],"names":["React","Table","axios","columns","title","dataIndex","sorter","render","name","first","last","width","filters","text","value","getRandomuserParams","params","results","pagination","pageSize","page","current","PersonList","Component","state","data","loading","handleTableChange","fetch","sortField","field","sortOrder","order","setState","get","then","response","total","catch","error","console","log","componentDidMount","record","login","uuid"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Table } from \"antd\";\nimport axios from \"axios\";\n\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    sorter: true,\n    render: (name) => `${name.first} ${name.last}`,\n    width: \"20%\"\n  },\n  {\n    title: \"Gender\",\n    dataIndex: \"gender\",\n    filters: [\n      { text: \"Male\", value: \"male\" },\n      { text: \"Female\", value: \"female\" }\n    ],\n    width: \"20%\"\n  },\n  {\n    title: \"Email\",\n    dataIndex: \"email\"\n  }\n];\n\nconst getRandomuserParams = (params) => {\n  return {\n    results: params.pagination.pageSize,\n    page: params.pagination.current,\n    ...params\n  };\n};\n\nclass PersonList extends React.Component {\n  state = {\n    data: [],\n    pagination: {\n      current: 1,\n      pageSize: 10\n    },\n    loading: false\n  };\n\n  componentDidMount() {\n    const { pagination } = this.state;\n    this.fetch({ pagination });\n  }\n\n  handleTableChange = (pagination, filters, sorter) => {\n    this.fetch({\n      sortField: sorter.field,\n      sortOrder: sorter.order,\n      pagination,\n      ...filters\n    });\n  };\n\n  fetch = (params = {}) => {\n    this.setState({ loading: true });\n\n    axios\n      .get(\"https://randomuser.me/api\", {\n        params: getRandomuserParams(params)\n      })\n      .then((response) => {\n        const { data } = response;\n\n        this.setState({\n          loading: false,\n          data: data.results,\n          pagination: {\n            ...params.pagination,\n            total: 200 // Mock data\n          }\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n      .then(() => {\n        this.setState({\n          loading: false\n        });\n      });\n  };\n\n  render() {\n    const { data, pagination, loading } = this.state;\n    return (\n      <Table\n        columns={columns}\n        rowKey={(record) => record.login.uuid}\n        dataSource={data}\n        pagination={pagination}\n        loading={loading}\n        onChange={this.handleTableChange}\n      />\n    );\n  }\n}\n\nexport default PersonList;\n"]},"metadata":{},"sourceType":"module"}