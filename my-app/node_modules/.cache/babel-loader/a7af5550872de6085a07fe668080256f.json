{"ast":null,"code":"var _jsxFileName = \"/home/irem/Desktop/obss/irem.karaca/week4_react/reactDemo/my-app/src/marketplace/service/UpdateProduct.js\",\n    _s = $RefreshSig$();\n\nimport { Form, Input, Button, Select } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateProduct = ({\n  location\n}) => {\n  _s();\n\n  const [credentials, setCredentials] = useState({});\n\n  const onFinish = values => {\n    debugger;\n    axios.put('http://localhost:8080/admin/products/update', {\n      id: location.id,\n      name: credentials.name,\n      price: credentials.price\n    }).then(loginResponse => {});\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  const handleChange = event => {\n    setCredentials({ ...credentials,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  console.log(location.state);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    },\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    style: {\n      margin: \"0 auto\",\n      width: 400\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Product Name\",\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"Please enter a product name!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleChange,\n        name: \"name\",\n        value: credentials.name,\n        placeholder: location.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Price\",\n      name: \"price\",\n      rules: [{\n        required: true,\n        message: \"Please enter a price!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        onChange: handleChange,\n        name: \"price\",\n        value: credentials.price,\n        placeholder: location.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Seller\",\n      name: \"seller\",\n      rules: [{\n        required: true,\n        message: \"Please select a seller!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UpdateProduct, \"CbsxFZyr+suJHSdWXjPd4MmYuGk=\");\n\n_c = UpdateProduct;\nexport default UpdateProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProduct\");","map":{"version":3,"sources":["/home/irem/Desktop/obss/irem.karaca/week4_react/reactDemo/my-app/src/marketplace/service/UpdateProduct.js"],"names":["Form","Input","Button","Select","useHistory","axios","React","useState","useEffect","UpdateProduct","location","credentials","setCredentials","onFinish","values","put","id","name","price","then","loginResponse","onFinishFailed","errorInfo","console","log","handleChange","event","target","value","state","span","remember","margin","width","required","message"],"mappings":"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","sourcesContent":["import { Form, Input, Button, Select } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\nconst UpdateProduct = ({ location }) => {\n    const [credentials, setCredentials] = useState({});\n    const onFinish = (values) => {\n        debugger;\n        axios.put('http://localhost:8080/admin/products/update', {\n          id: location.id,\n          name: credentials.name,\n          price: credentials.price,\n    \n        })\n          .then(loginResponse => {\n          })\n    \n      };\n    \n      const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n      };\n    \n      const handleChange = (event) => {\n        setCredentials({\n          ...credentials,\n          [event.target.name]: event.target.value\n    \n        });\n      };\n\n    console.log(location.state);\n    return (\n\n        <Form\n          name=\"basic\"\n          labelCol={{\n            span: 8\n          }}\n          wrapperCol={{\n            span: 16\n          }}\n          initialValues={{\n            remember: true\n          }}\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n          style={{ margin: \"0 auto\", width: 400 }}\n        >\n          <Form.Item\n            label=\"Product Name\"\n            name=\"name\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter a product name!\"\n              }\n            ]}\n          >\n            <Input onChange={handleChange} name=\"name\" value={credentials.name} placeholder={location.name} />\n          </Form.Item>\n    \n          <Form.Item\n            label=\"Price\"\n            name=\"price\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter a price!\"\n              }\n            ]}\n          >\n            <Input onChange={handleChange} name=\"price\" value={credentials.price} placeholder={location.price} />\n    \n          </Form.Item>\n          <Form.Item\n            label=\"Seller\"\n            name=\"seller\"\n            rules={[\n              {\n                required: true,\n                message: \"Please select a seller!\"\n              }\n            ]}\n          >\n            <Button type=\"primary\" htmlType=\"submit\">\n              Button\n            </Button>\n          </Form.Item>\n        </Form>\n      );\n\n}\n\nexport default UpdateProduct;"]},"metadata":{},"sourceType":"module"}