{"ast":null,"code":"var _jsxFileName = \"/home/irem/Desktop/obss/irem.karaca/week4_react/reactDemo/my-app/src/marketplace/service/Users.js\";\nimport React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Table } from \"antd\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: \"Name\",\n  dataIndex: \"name\",\n  sorter: {\n    compare: (a, b) => a.name.localeCompare(b.name),\n    multiple: 1\n  },\n  width: \"20%\"\n}, {\n  title: \"Price\",\n  dataIndex: \"price\",\n  render: price => `$ ${price}`,\n  sorter: {\n    compare: (a, b) => a.price - b.price,\n    multiple: 1\n  },\n  width: \"20%\"\n}, {\n  title: \"Seller\",\n  dataIndex: \"seller\",\n  render: seller => `${seller.username}`,\n  width: \"20%\"\n}];\n\nconst getProductParams = params => {\n  return {\n    results: params.pagination.pageSize,\n    page: params.pagination.current,\n    ...params\n  };\n};\n\nclass Products extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data: [],\n      pagination: {\n        current: 1,\n        pageSize: 5\n      },\n      loading: false\n    };\n\n    this.handleTableChange = (pagination, filters, sorter) => {\n      this.fetch({\n        sortField: sorter.field,\n        sortOrder: sorter.order,\n        pagination,\n        ...filters\n      });\n    };\n\n    this.fetch = (params = {}) => {\n      this.setState({\n        loading: true\n      });\n      axios.get(\"http://localhost:8080/admin/users\", {\n        params: getProductParams(params)\n      }).then(response => {\n        console.log(response.data);\n        const {\n          data\n        } = response;\n        this.setState({\n          loading: false,\n          data: data,\n          pagination: { ...params.pagination\n          }\n        });\n      }).catch(error => {\n        console.log(error);\n      }).then(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const {\n      pagination\n    } = this.state;\n    this.fetch({\n      pagination\n    });\n  }\n\n  render() {\n    const {\n      data,\n      pagination,\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      rowKey: record => record.id,\n      dataSource: data,\n      pagination: pagination,\n      loading: loading,\n      onChange: this.handleTableChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Products;","map":{"version":3,"sources":["/home/irem/Desktop/obss/irem.karaca/week4_react/reactDemo/my-app/src/marketplace/service/Users.js"],"names":["React","Table","axios","columns","title","dataIndex","sorter","compare","a","b","name","localeCompare","multiple","width","render","price","seller","username","getProductParams","params","results","pagination","pageSize","page","current","Products","Component","state","data","loading","handleTableChange","filters","fetch","sortField","field","sortOrder","order","setState","get","then","response","console","log","catch","error","componentDidMount","record","id"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Table } from \"antd\";\nimport axios from \"axios\";\n\nconst columns = [\n    {\n        title: \"Name\",\n        dataIndex: \"name\",\n        \n        sorter: {\n            compare: (a, b) => a.name.localeCompare(b.name),\n            multiple: 1,\n          },\n        width: \"20%\"\n    },\n    {\n        title: \"Price\",\n        dataIndex: \"price\",\n        render: (price) => `$ ${price}`,\n        sorter: {\n            compare: (a, b) => a.price - b.price,\n            multiple: 1,\n          },\n        \n        width: \"20%\"\n    },\n    {\n        title: \"Seller\",\n        dataIndex: \"seller\",\n        render: (seller) => `${seller.username}`,\n        width: \"20%\"\n    }\n];\n\nconst getProductParams = (params) => {\n    return {\n        results: params.pagination.pageSize,\n        page: params.pagination.current,\n        ...params\n    };\n};\n\nclass Products extends React.Component {\n    state = {\n        data: [],\n        pagination: {\n            current: 1,\n            pageSize: 5\n        },\n        loading: false\n    };\n\n    componentDidMount() {\n        const { pagination } = this.state;\n        this.fetch({ pagination });\n    };\n\n\n    handleTableChange = (pagination, filters, sorter) => {\n        this.fetch({\n            sortField: sorter.field,\n            sortOrder: sorter.order,\n            pagination,\n            ...filters\n        });\n    };\n\n\n   \n\n\n\n    fetch = (params = {}) => {\n        this.setState({ loading: true });\n\n        axios\n            .get(\"http://localhost:8080/admin/users\", {\n                params: getProductParams(params)\n            })\n            .then((response) => {\n                console.log(response.data);\n                const { data } = response;\n\n                this.setState({\n                    loading: false,\n                    data: data,\n                    pagination: {\n                        ...params.pagination\n                    }\n                });\n            })\n            .catch((error) => {\n                console.log(error);\n            })\n            .then(() => {\n                this.setState({\n                    loading: false\n                });\n            });\n    };\n\n\n\n\n    render() {\n        const { data, pagination, loading } = this.state;\n        return (\n            <Table\n                columns={columns}\n                rowKey={(record) => record.id}\n                dataSource={data}\n                pagination={pagination}\n                loading={loading}\n                onChange={this.handleTableChange}\n            />\n        );\n    }\n}\n\nexport default Products;"]},"metadata":{},"sourceType":"module"}