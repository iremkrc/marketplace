{"ast":null,"code":"import axios from \"axios\";\nimport LocalStorageService from \"../util/LocalStorageService\";\nconst localStorageService = LocalStorageService.getService(); // Add a request interceptor\n\nconst configure = () => {\n  axios.interceptors.request.use(config => {\n    const token = localStorageService.getToken();\n\n    if (token) {\n      config.headers['Authorization'] = 'Bearer ' + token;\n    } // config.headers['Content-Type'] = 'application/json';\n\n\n    return config;\n  }, error => {\n    Promise.reject(error);\n  });\n};\n\nexport default configure;","map":{"version":3,"sources":["/home/irem/Desktop/obss/irem.karaca/week4_react/reactDemo/my-app/src/marketplace/config/AxiosConfig.js"],"names":["axios","LocalStorageService","localStorageService","getService","configure","interceptors","request","use","config","token","getToken","headers","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,6BAAhC;AAEA,MAAMC,mBAAmB,GAAGD,mBAAmB,CAACE,UAApB,EAA5B,C,CAEA;;AACA,MAAMC,SAAS,GAAG,MAAM;AACpBJ,EAAAA,KAAK,CAACK,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACIC,MAAM,IAAI;AACN,UAAMC,KAAK,GAAGP,mBAAmB,CAACQ,QAApB,EAAd;;AACA,QAAID,KAAJ,EAAW;AACPD,MAAAA,MAAM,CAACG,OAAP,CAAe,eAAf,IAAkC,YAAYF,KAA9C;AACH,KAJK,CAKN;;;AACA,WAAOD,MAAP;AACH,GARL,EASII,KAAK,IAAI;AACLC,IAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACH,GAXL;AAYH,CAbD;;AAeA,eAAeR,SAAf","sourcesContent":["import axios from \"axios\";\nimport LocalStorageService from \"../util/LocalStorageService\";\n\nconst localStorageService = LocalStorageService.getService();\n\n// Add a request interceptor\nconst configure = () => {\n    axios.interceptors.request.use(\n        config => {\n            const token = localStorageService.getToken();\n            if (token) {\n                config.headers['Authorization'] = 'Bearer ' + token;\n            }\n            // config.headers['Content-Type'] = 'application/json';\n            return config;\n        },\n        error => {\n            Promise.reject(error)\n        });\n}\n\nexport default configure;\n\n\n"]},"metadata":{},"sourceType":"module"}